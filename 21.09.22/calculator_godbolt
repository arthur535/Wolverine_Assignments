std::piecewise_construct:
        .zero   1
sum(double, double):
        push    rbp
        mov     rbp, rsp
        movsd   QWORD PTR [rbp-8], xmm0
        movsd   QWORD PTR [rbp-16], xmm1
        movsd   xmm0, QWORD PTR [rbp-8]
        addsd   xmm0, QWORD PTR [rbp-16]
        movq    rax, xmm0
        movq    xmm0, rax
        pop     rbp
        ret
mul(double, double):
        push    rbp
        mov     rbp, rsp
        movsd   QWORD PTR [rbp-8], xmm0
        movsd   QWORD PTR [rbp-16], xmm1
        movsd   xmm0, QWORD PTR [rbp-8]
        mulsd   xmm0, QWORD PTR [rbp-16]
        movq    rax, xmm0
        movq    xmm0, rax
        pop     rbp
        ret
div(double, double):
        push    rbp
        mov     rbp, rsp
        movsd   QWORD PTR [rbp-8], xmm0
        movsd   QWORD PTR [rbp-16], xmm1
        movsd   xmm0, QWORD PTR [rbp-8]
        divsd   xmm0, QWORD PTR [rbp-16]
        movq    rax, xmm0
        movq    xmm0, rax
        pop     rbp
        ret
sub(double, double):
        push    rbp
        mov     rbp, rsp
        movsd   QWORD PTR [rbp-8], xmm0
        movsd   QWORD PTR [rbp-16], xmm1
        movsd   xmm0, QWORD PTR [rbp-8]
        subsd   xmm0, QWORD PTR [rbp-16]
        movq    rax, xmm0
        movq    xmm0, rax
        pop     rbp
        ret
.LC0:
        .string "="
main:
        push    rbp
        mov     rbp, rsp
        push    rbx
        sub     rsp, 104
        lea     rax, [rbp-80]
        mov     rdi, rax
        call    std::map<char, double (*)(double, double), std::less<char>, std::allocator<std::pair<char const, double (*)(double, double)> > >::map() [complete object constructor]
        lea     rax, [rbp-88]
        mov     rsi, rax
        mov     edi, OFFSET FLAT:_ZSt3cin
        call    std::basic_istream<char, std::char_traits<char> >::operator>>(double&)
        lea     rax, [rbp-97]
        mov     rsi, rax
        mov     edi, OFFSET FLAT:_ZSt3cin
        call    std::basic_istream<char, std::char_traits<char> >& std::operator>><char, std::char_traits<char> >(std::basic_istream<char, std::char_traits<char> >&, char&)
        lea     rax, [rbp-96]
        mov     rsi, rax
        mov     edi, OFFSET FLAT:_ZSt3cin
        call    std::basic_istream<char, std::char_traits<char> >::operator>>(double&)
        mov     BYTE PTR [rbp-20], 43
        lea     rdx, [rbp-20]
        lea     rax, [rbp-80]
        mov     rsi, rdx
        mov     rdi, rax
        call    std::map<char, double (*)(double, double), std::less<char>, std::allocator<std::pair<char const, double (*)(double, double)> > >::operator[](char&&)
        mov     QWORD PTR [rax], OFFSET FLAT:sum(double, double)
        mov     BYTE PTR [rbp-19], 45
        lea     rdx, [rbp-19]
        lea     rax, [rbp-80]
        mov     rsi, rdx
        mov     rdi, rax
        call    std::map<char, double (*)(double, double), std::less<char>, std::allocator<std::pair<char const, double (*)(double, double)> > >::operator[](char&&)
        mov     QWORD PTR [rax], OFFSET FLAT:sub(double, double)
        mov     BYTE PTR [rbp-18], 42
        lea     rdx, [rbp-18]
        lea     rax, [rbp-80]
        mov     rsi, rdx
        mov     rdi, rax
        call    std::map<char, double (*)(double, double), std::less<char>, std::allocator<std::pair<char const, double (*)(double, double)> > >::operator[](char&&)
        mov     QWORD PTR [rax], OFFSET FLAT:mul(double, double)
        mov     BYTE PTR [rbp-17], 47
        lea     rdx, [rbp-17]
        lea     rax, [rbp-80]
        mov     rsi, rdx
        mov     rdi, rax
        call    std::map<char, double (*)(double, double), std::less<char>, std::allocator<std::pair<char const, double (*)(double, double)> > >::operator[](char&&)
        mov     QWORD PTR [rax], OFFSET FLAT:div(double, double)
        mov     esi, OFFSET FLAT:.LC0
        mov     edi, OFFSET FLAT:_ZSt4cout
        call    std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)
        mov     rbx, rax
        lea     rdx, [rbp-97]
        lea     rax, [rbp-80]
        mov     rsi, rdx
        mov     rdi, rax
        call    std::map<char, double (*)(double, double), std::less<char>, std::allocator<std::pair<char const, double (*)(double, double)> > >::operator[](char const&)
        mov     rdx, QWORD PTR [rax]
        movsd   xmm0, QWORD PTR [rbp-96]
        mov     rax, QWORD PTR [rbp-88]
        movapd  xmm1, xmm0
        movq    xmm0, rax
        call    rdx
        movq    rax, xmm0
        movq    xmm0, rax
        mov     rdi, rbx
        call    std::basic_ostream<char, std::char_traits<char> >::operator<<(double)
        mov     esi, OFFSET FLAT:_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
        mov     rdi, rax
        call    std::basic_ostream<char, std::char_traits<char> >::operator<<(std::basic_ostream<char, std::char_traits<char> >& (*)(std::basic_ostream<char, std::char_traits<char> >&))
        lea     rax, [rbp-80]
        mov     rdi, rax
        call    std::map<char, double (*)(double, double), std::less<char>, std::allocator<std::pair<char const, double (*)(double, double)> > >::~map() [complete object destructor]
        mov     eax, 0
        jmp     .L22
        mov     rbx, rax
        lea     rax, [rbp-80]
        mov     rdi, rax
        call    std::map<char, double (*)(double, double), std::less<char>, std::allocator<std::pair<char const, double (*)(double, double)> > >::~map() [complete object destructor]
        mov     rax, rbx
        mov     rdi, rax
        call    _Unwind_Resume
.L22:
        mov     rbx, QWORD PTR [rbp-8]
        leave
        ret

__static_initialization_and_destruction_0(int, int):
        push    rbp
        mov     rbp, rsp
        sub     rsp, 16
        mov     DWORD PTR [rbp-4], edi
        mov     DWORD PTR [rbp-8], esi
        cmp     DWORD PTR [rbp-4], 1
        jne     .L272
        cmp     DWORD PTR [rbp-8], 65535
        jne     .L272
        mov     edi, OFFSET FLAT:_ZStL8__ioinit
        call    std::ios_base::Init::Init() [complete object constructor]
        mov     edx, OFFSET FLAT:__dso_handle
        mov     esi, OFFSET FLAT:_ZStL8__ioinit
        mov     edi, OFFSET FLAT:_ZNSt8ios_base4InitD1Ev
        call    __cxa_atexit
.L272:
        nop
        leave
        ret
_GLOBAL__sub_I_sum(double, double):
        push    rbp
        mov     rbp, rsp
        mov     esi, 65535
        mov     edi, 1
        call    __static_initialization_and_destruction_0(int, int)
        pop     rbp
        ret
